# -*- coding: utf-8 -*-
"""blood_donation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h_jJrugTXMUW5FqgBDmXqQNjwrO8GrS8
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegressionCV 
from sklearn.metrics import log_loss
from sklearn.preprocessing import StandardScaler, LabelEncoder

raw_train = pd.read_csv('9db113a1-cdbe-4b1c-98c2-11590f124dd8.csv')
raw_test = pd.read_csv('5c9fa979-5a84-45d6-93b9-543d1a0efc41.csv')

raw_train = raw_train.iloc[:, 1:]
raw_test = raw_test.iloc[:, 1:]

Xtrain = raw_data.iloc[:, :4]
ytrain = raw_data.iloc[:, 4:]
Xtest = raw_test

Xtrain['Average Donation per Month'] = (Xtrain['Total Volume Donated (c.c.)']/
                                         Xtrain['Months since First Donation'])
Xtrain['Time req per Donation'] = ((Xtrain['Months since First Donation'] - Xtrain['Months since Last Donation'])
                           /Xtrain['Number of Donations'])
Xtest['Average Donation per Month'] = (Xtest['Total Volume Donated (c.c.)']/
                                         Xtest['Months since First Donation'])
Xtest['Time req per Donation'] = ((Xtest['Months since First Donation'] - Xtest['Months since Last Donation'])
                           /Xtest['Number of Donations'])

# Numeric Features
numericFeatures = ['Months since Last Donation', 'Number of Donations', 'Total Volume Donated (c.c.)', 
                   'Average Donation per Month', 'Time req per Donation', 'Months since First Donation']
scaler = StandardScaler()

X = pd.DataFrame(scaler.fit_transform(Xtrain[numericFeatures]))
X_ = pd.DataFrame(scaler.transform(Xtest[numericFeatures]))

# Categorical Features
Xtrain['Donated in the past 3-6 months'] = ((Xtrain['Months since Last Donation'] >= 3) &
                                             (Xtrain['Months since Last Donation'] <= 6))
Xtest['Donated in the past 3-6 months'] = ((Xtest['Months since Last Donation'] >= 3) &
                                             (Xtest['Months since Last Donation'] <= 6))
Xtest['Frequent Donor'] = (Xtest['Number of Donations'] >= 5)
Xtrain['Frequent Donor'] = (Xtrain['Number of Donations'] >= 5)

factorVar = ['Frequent Donor', 'Donated in the past 3-6 months']

le = LabelEncoder()

for i in factorVar:
    X[i] = le.fit_transform(Xtrain[i])
    X_[i] = le.transform(Xtest[i])

# Classifier
clf = LogisticRegressionCV(Cs=10, class_weight=None, cv=5, dual=False,
           fit_intercept=True, intercept_scaling=1.0, max_iter=100,
           multi_class='ovr', n_jobs=1, penalty='l2', random_state=12,
           refit=True, scoring='neg_log_loss', solver='lbfgs', tol=0.0001,
           verbose=0)

clf.fit(X, ytrain)
log_loss(ytrain, clf.predict_proba(X))

# Test predictions
pred = clf.predict_proba(X_)[:, 1]

print(pred.mean(), ytrain.values.mean())

submission = pd.read_csv('BloodDonationSubmissionFormat.csv')
submission['Made Donation in March 2007'] = pred

submission.to_csv('output.csv', index=False)